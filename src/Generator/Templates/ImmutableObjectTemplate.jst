'use strict';

var ImmutableGraphObject = require('worldstate/src/Base/ImmutableGraphObject');

{RequireBlock}
/**
 * {GraphName}
 *
 * @constructor
 * @lends {GraphName}
 */
var {GraphName} = function {GraphName}(obj) {
  this.__private.graph = new ImmutableGraphObject(obj);
};

{GraphName}.prototype = {
  /**
   * @private
   */
  __private: {
    graph: null,
    wrappers: null
  },

{GraphMethods}
  enableVersioning: function {GraphName}$enableVersioning() {
    this.__private.graph.enableVersioning();
  },

  saveVersion: function {GraphName}$saveVersion(name) {
    this.__private.graph.saveVersion(name);
  },

  restoreVersion: function {GraphName}$restoreVersion(name) {
    this.__private.graph.restoreVersion(name);
  },

  getVersions: function {GraphName}$getVersions() {
    return this.__private.graph.historyRefs;
  },

  changeReferenceTo: function {GraphName}$changeReferenceTo(obj) {
    this.__private.graph.changeReferenceTo(obj);
  },

  changeValueTo: function {GraphName}$changeValueTo(val) {
    this.__private.graph.changeValueTo(val);
  },

  /**
   * @return {{GraphReadDoc}}
   */
  read: function {GraphName}$read() {
    return this.__private.graph.__private.refToObj.ref;
  }
};

module.exports = {GraphName};