/**
 * Generated by worldstate.js
 */
'use strict';

var ImmutableGraphObject = require('worldstate/src/Base/ImmutableGraphObject');
var ImmutableGraphRegistry =
    require('worldstate/src/Base/ImmutableGraphRegistry');

{RequireBlock}

/**
 * A factory for {{GraphName}}
 *
 * @lends {{GraphName}}
 */
var {GraphName}Factory = {
  /**
   * @param {{GraphChangeValueDoc}} obj JSON input data
   * @param {{}} parent
   * @param {string} parentKey
   * @return {{GraphName}Prototype}
   */
  newInstance: function {GraphName}$newInstance(obj, parent, parentKey) {

    /**
     * {GraphName}
     *
     * @constructor
     * @param {{GraphChangeValueDoc}} obj JSON input data
     */
    var {GraphName}Class = function {GraphName}Class(obj, parent, parentKey) {
      this.__private = {
        graph: null,
        wrappers: {}
      };
      this.__private.graph = ImmutableGraphRegistry.getImmutableObject(obj, parent, parentKey);
    };
    {GraphName}Class.prototype = {GraphName}Prototype;
    var instance = new {GraphName}Class(obj, parent, parentKey);
    return instance;
  }
};


/**
 * @lends {{GraphName}Prototype}
 */
var {GraphName}Prototype = {
  /**
   * @private
   * @struct
   */
  __private: {
    graph: null,
    wrappers: {}
  },

  {SubFunctions}

};

module.exports = {GraphName}Factory;
